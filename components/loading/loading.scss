@import "../../assets/styles/vars";

.loading-wrapper-content {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.loading-wrapper-button {
  float: right;
  height: 100%;
  margin-left: 7px;
  position: relative;
}

.loading-wrapper-absolute {
  position: absolute;
  width: 100%;
  height: 100%;
  right: 0;
  top: 0;
  // background: rgba(#fff, .8);
  // border-radius: 3px;
  z-index: 3;
}

.hidden {
  visibility: hidden;
  pointer-events: none;
  opacity: 0;
}

.spinner {
  display: block;
  margin: 0 auto;
  animation: spin .4s linear infinite;
  position: relative;
  border-radius: 100%;

  &:before {
    content: '';
    display: block;
    position: absolute;
    box-sizing: border-box;
    border-radius: 100%;
  }
}

.spinner-normal {
  composes: spinner;
  height: 40px;
  width: 40px;
  border: 1px solid;

  &:before {
    width: 40px;
    height: 40px;
    top: -1px;
    right: -1px;
    border: 1px solid #fff;
    border-top-color: transparent;
    border-left-color: transparent;
  }
}

.spinner-small {
  composes: spinner;
  height: 15px;
  width: 15px;
  border: 1px solid;
  position: relative;
  top: 50%;
  left: 0;
  right: 0;
  margin: -7.5px auto 0;

  &:before {
    width: 15px;
    height: 15px;
    top: -1px;
    right: -1px;
    border: 1px solid #fff;
    border-top-color: transparent;
    border-left-color: transparent;
  }
}

.spinner-center {
  composes: spinner-normal;
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  margin: -20px auto 0;
}

.regular {
  border-color: mix(#fff, $mainColor, 85% );

  &:before {
    border-right-color: $mainColor;
    border-bottom-color: $mainColor;
  }
}

.btnColor {
  border-color: #d24b60;

  &:before {
    border-right-color: #fff;
    border-bottom-color: #fff;
  }
}

$spinnerTypes: normal small center;
$spinnerColors: regular btnColor;
@each $type in $spinnerTypes {
  @each $color in $spinnerColors {
    .spinner-#{$type}-#{$color} {
      composes: spinner-#{$type};
      composes: #{$color};
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg)
  }
  100% {
    transform: rotate(360deg);
  }
}
